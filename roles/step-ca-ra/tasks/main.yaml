---
- name: Bootstrap step cli
  ansible.builtin.command: >-
    step ca bootstrap --ca-url https://cuboid-topi.rmb1993-gmail-com.ca.smallstep.com \
      --fingerprint eb136a5118931a2306964469705323521dda8c43d26ec67e1c5508eb123f9c70
  args:
    creates: /etc/step/config/defaults.json
  environment:
    STEPPATH: /etc/step

- name: Install step ca
  ansible.builtin.package:
    name:
      - step-ca
    state: present

- name: Create step user
  ansible.builtin.user:
    name: step
    home: /etc/step-ca
    create_home: true
    shell: /bin/false
    system: true

- name: Allow binding to 443
  community.general.capabilities:
    path: /usr/bin/step-ca
    capability: cap_net_bind_service=eip
    state: present

- name: Create datavg
  community.general.lvg:
    vg: data
    pvs: /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1

- name: Create step-ca lv
  community.general.lvol:
    vg: data
    lv: step-ca
    size: 5G

- name: Format step-ca lv
  community.general.filesystem:
    fstype: xfs
    dev: /dev/data/step-ca

- name: Mount step-ca drive
  ansible.posix.mount:
    path: /etc/step-ca
    src: /dev/data/step-ca
    fstype: xfs
    boot: true
    state: mounted

- name: Create db dir
  ansible.builtin.file:
    path: /etc/step-ca/db
    state: directory
    mode: "0755"
    owner: step
    group: step

- name: Create config dir
  ansible.builtin.file:
    path: /etc/step-ca/config
    state: directory
    mode: "0755"
    owner: step
    group: step

- name: Create templates dir
  ansible.builtin.file:
    path: /etc/step-ca/templates
    state: directory
    mode: "0755"
    owner: step
    group: step

- name: Check if provisioner password exists
  ansible.builtin.stat:
    path: /etc/step-ca/passwords/{{ ansible_fqdn }}
  register: provisioner_password_file

- name: Provisioner Block
  when: not provisioner_password_file.stat.exists
  block:
    - name: Create passwords dir
      ansible.builtin.file:
        path: /etc/step-ca/passwords
        state: directory
        mode: "0755"
        owner: step
        group: step

    - name: Create Provisioner and Generate Password
      ansible.builtin.shell:
        cmd: |
          set -euo pipefail
          step ca provisioner add {{ ansible_fqdn }} --type JWK --create --disable-ssh-ca-user --disable-ssh-ca-host \
            --x509-min-dur=2190h --x509-max-dur=2190h --x509-default-dur=2190h --ssh=false \
            --password-file=<(openssl rand -base64 32 | tee /dev/stderr)
      changed_when: false
      delegate_to: localhost
      become: false
      register: provisioner_add

    - name: Save Provisioner password to file
      ansible.builtin.copy:
        content: "{{ provisioner_add.stderr_lines[0] }}"
        dest: /etc/step-ca/passwords/{{ ansible_fqdn }}
        mode: "0600"
        owner: step
        group: step

- name: Place step-ca config
  ansible.builtin.template:
    src: etc/step-ca/config/ca.json
    dest: /etc/step-ca/config/ca.json
    mode: "0644"
    owner: step
    group: step
  register: step_ca_config

- name: Place step-ca x509 acme template
  ansible.builtin.copy:
    src: etc/step-ca/templates/x509-acme.tpl
    dest: /etc/step-ca/templates/x509-acme.tpl
    mode: "0644"
    owner: step
    group: step

- name: Place step-ca service
  ansible.builtin.template:
    src: etc/systemd/system/step-ca.service
    dest: /etc/systemd/system/step-ca.service
    mode: "0644"
  register: smallstep_ca_systemd_service_template

- name: Reload SystemD # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: smallstep_ca_systemd_service_template.changed

- name: Enable and start
  ansible.builtin.systemd_service:
    name: step-ca.service
    state: started
    enabled: true

- name: Reload on config change # noqa: no-handler
  ansible.builtin.systemd_service:
    name: step-ca.service
    state: reloaded
  when: step_ca_config.changed
